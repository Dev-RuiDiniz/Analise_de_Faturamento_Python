# Nome do workflow que aparecerá na interface do GitHub Actions
name: Analise de Faturamento

# Define quando o workflow será acionado:
on:
  push:                # Executa quando há push (envio de código)
    branches: [ "main" ]  # Somente para o branch main
  pull_request:        # Executa quando há uma pull request
    branches: [ "main" ]  # Somente para o branch main

# Permissões necessárias para o workflow
permissions:
  contents: read  # Permissão para ler o conteúdo do repositório

# Jobs (tarefas) que serão executados
jobs:
  build:  # Nome do job (pode ser qualquer nome)
    
    # Executa em uma máquina virtual com o Ubuntu mais recente
    runs-on: ubuntu-latest

    # Passos (steps) que compõem o job
    steps:
    # Primeiro passo: baixa o código do repositório
    - uses: actions/checkout@v4
    
    # Configura o Python 3.10 no ambiente
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    
    # Instala as dependências do projeto
    - name: Install dependencies
      run: |
        # Atualiza o pip (gerenciador de pacotes do Python)
        python -m pip install --upgrade pip
        # Instala o flake8 (linter) e pytest (framework de testes)
        pip install flake8 pytest
        # Se existir um arquivo requirements.txt, instala as dependências listadas nele
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    # Executa análise estática do código com flake8
    - name: Lint with flake8
      run: |
        # Primeiro comando: para a build se encontrar erros críticos de sintaxe
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Segundo comando: executa análise completa mas não falha (exit-zero)
        # Configura complexidade máxima de 10 e limite de 127 caracteres por linha
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    # Executa os testes automatizados com pytest
    - name: Test with pytest
      run: |
        pytest -v